# Generated by Django 4.0.5 on 2022-06-28 09:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation', models.DateTimeField(auto_now_add=True)),
                ('version', models.PositiveSmallIntegerField(default=0)),
                ('category', models.CharField(choices=[('telegram', 'تلگرام'), ('instagram', 'اینستاگرام'), ('twitter', 'تویتتر'), ('whatsapp', 'واتساپ'), ('reddit', 'رددیت')], max_length=256, verbose_name='دسته\u200cبندی')),
                ('item', models.CharField(choices=[('channel', 'کانال تلگرامی'), ('group', 'گروه تلگرامی')], max_length=256, verbose_name='دسته\u200cبندی دسته\u200cبندی\u200cها')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ContentSymbol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation', models.DateTimeField(auto_now_add=True)),
                ('version', models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation', models.DateTimeField(auto_now_add=True)),
                ('version', models.PositiveSmallIntegerField(default=0)),
                ('key', models.CharField(max_length=256)),
                ('type', models.CharField(max_length=256)),
            ],
            options={
                'ordering': ['key'],
            },
        ),
        migrations.CreateModel(
            name='KeywordValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation', models.DateTimeField(auto_now_add=True)),
                ('version', models.PositiveSmallIntegerField(default=0)),
                ('value', models.IntegerField()),
            ],
            options={
                'ordering': ['value'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('creation', models.DateTimeField(auto_now_add=True)),
                ('version', models.PositiveSmallIntegerField(default=0)),
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='مشخصه')),
                ('name', models.CharField(max_length=256, verbose_name='اسم کانال/گروه')),
                ('text', models.CharField(max_length=512, verbose_name='محتوا متنی')),
                ('pub_date', models.DateTimeField()),
                ('from_id', models.IntegerField(null=True, verbose_name='فرستنده مستقیم پیام')),
                ('forward_from', models.IntegerField(null=True, verbose_name='فرستنده غیرمستقیم پیام')),
                ('forward_count', models.IntegerField(null=True, verbose_name='تعداد دفعات ارسال غیرمستقیم پیام')),
                ('edited_date', models.DateTimeField(null=True, verbose_name='تاریخ تغییر محتوای متنی پیام')),
                ('edit_hide', models.BooleanField(null=True, verbose_name='مخفی کردن تغییر پیام')),
                ('is_reply', models.BooleanField(null=True, verbose_name='پیام فرستاده شده پاسخی به پیام\u200cهای دیگر است/نیست')),
                ('reply_count', models.IntegerField(null=True, verbose_name='دفعاتی که به پیام پاسخ داده شده')),
                ('reply_to', models.IntegerField(null=True, verbose_name='مشخصه پیام اصلی پاسخ داده شده')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Signal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation', models.DateTimeField(auto_now_add=True)),
                ('version', models.PositiveSmallIntegerField(default=0)),
                ('is_signal', models.BooleanField()),
                ('is_buy', models.BooleanField()),
                ('is_sell', models.BooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StockSymbol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation', models.DateTimeField(auto_now_add=True)),
                ('version', models.PositiveSmallIntegerField(default=0)),
                ('code', models.CharField(max_length=256)),
                ('group', models.CharField(max_length=256)),
                ('industry', models.CharField(max_length=256)),
                ('table', models.CharField(max_length=256)),
                ('english_symbol', models.CharField(max_length=256)),
                ('english_name', models.CharField(max_length=256)),
                ('symbol', models.CharField(max_length=256)),
                ('name', models.CharField(max_length=256)),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='URL',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation', models.DateTimeField(auto_now_add=True)),
                ('version', models.PositiveSmallIntegerField(default=0)),
                ('domain', models.CharField(max_length=256, verbose_name='ادرس وبسایت')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_element', to='app.category')),
            ],
            options={
                'ordering': ['domain'],
            },
        ),
        migrations.AddConstraint(
            model_name='stocksymbol',
            constraint=models.UniqueConstraint(fields=('code',), name='unique_code_combination'),
        ),
        migrations.AddField(
            model_name='signal',
            name='content',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='MessageSignal', to='app.message'),
        ),
        migrations.AddField(
            model_name='message',
            name='URL',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='URL', to='app.url'),
        ),
        migrations.AddField(
            model_name='keywordvalue',
            name='keyword',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Keyword', to='app.keyword'),
        ),
        migrations.AddConstraint(
            model_name='keyword',
            constraint=models.UniqueConstraint(fields=('key', 'type'), name='unique_key_type_combination'),
        ),
        migrations.AddField(
            model_name='contentsymbol',
            name='content',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='MessageContent', to='app.message'),
        ),
        migrations.AddField(
            model_name='contentsymbol',
            name='stock_symbol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='StockSymbol', to='app.stocksymbol'),
        ),
        migrations.AddConstraint(
            model_name='category',
            constraint=models.UniqueConstraint(fields=('category', 'item'), name='unique_category_item_combination'),
        ),
        migrations.AddConstraint(
            model_name='message',
            constraint=models.UniqueConstraint(fields=('id', 'name', 'edited_date'), name='unique_id_name_edit_combination'),
        ),
    ]
